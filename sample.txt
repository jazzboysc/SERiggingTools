MAYA_PLUG_IN_PATH = E:\Work\SERiggingTools\Plugins
PYTHONPATH = E:\Work


import SERiggingTools.Base.SERigBase                as RigBase
import SERiggingTools.Base.SERigControl             as RigControl
import SERiggingTools.Base.SERigComponent           as RigComp
import SERiggingTools.Base.SERigEnum                as RigEnum
import SERiggingTools.Base.SERigNaming              as RigNaming
import SERiggingTools.Utils.SEJointHelper           as JointHelper
import SERiggingTools.Utils.SEStringHelper          as StringHelper
import SERiggingTools.Utils.SEMathHelper            as MathHelper
import SERiggingTools.Utils.SERigObjectTypeHelper   as RigObjectTypeHelper
import SERiggingTools.Utils.SEBakeAnimationHelper   as BakeAnimationHelper
import SERiggingTools.Utils.SEConstraintHelper      as ConstraintHelper
import SERiggingTools.Character.SECharacter         as RigCharacter
import SERiggingTools.Character.SECharacterDeform   as RigCharacterDeform 
import SERiggingTools.ThirdParty.bSkinSaver         as RigSkinSaver
import SERiggingTools.Rig.SERigSpineComponent       as RigSpineComponent
import SERiggingTools.Rig.SERigBipedLimbComponent   as RigBipedLimbComponent
import SERiggingTools.Rig.SERigBipedNeckComponent   as RigBipedNeckComponent
import SERiggingTools.Rig.SERigHumanFacialComponent as RigHumanFacialComponent
import SERiggingTools.UI.CreateRigUI                as CreateRigUI
import SERiggingTools.UI.ControlRigUI               as ControlRigUI
import SERiggingTools.PoseLibrary.PoseBrowseUI      as PoseBrowseUI
import SERiggingTools.PoseLibrary.ScreenShot        as ScreenShot
import SERiggingTools.PoseLibrary.SavePose          as SavePose

from maya import cmds

reload(RigEnum)
reload(RigBase)
reload(RigControl)
reload(RigNaming)
reload(RigComp)
reload(JointHelper)
reload(StringHelper)
reload(MathHelper)
reload(ConstraintHelper)
reload(RigObjectTypeHelper)
reload(BakeAnimationHelper)
reload(RigCharacter)
reload(RigCharacterDeform)
reload(RigSkinSaver)
reload(RigSpineComponent)
reload(RigBipedLimbComponent)
reload(RigBipedNeckComponent)
reload(RigHumanFacialComponent)
reload(CreateRigUI)
reload(ControlRigUI)
reload(PoseBrowseUI)
reload(ScreenShot)
reload(SavePose)

CreateRigUI.openMayaWindow()

ControlRigUI.openControlRigWindow()

mainProjectPath = 'E:/Work/SERiggingTools/Assets'

character = RigCharacter.RigBipedCharacter(characterName = 'Elisa')
character.build(  
                   mainProjectPath = mainProjectPath, 
                   upperBodyUpperLimbKnobCount = 2, 
                   upperBodyLowerLimbKnobCount = 2, 
                   lowerBodyUpperLimbKnobCount = 2, 
                   lowerBodyLowerLimbKnobCount = 1, 
                   mainCtrlOffset = 30
                   )


characters = cmds.ls(type = 'RigCharacterType')
for c in characters:
    res = cmds.listConnections(c + '.message')
    print res



RigBipedLimbComponent.RigHumanLimb.syncIKToFK('L_Arm_RigComponentsGrp')
RigBipedLimbComponent.RigHumanLimb.syncFKToIK('L_Arm_RigComponentsGrp')

RigBipedLimbComponent.RigHumanLimb.syncIKToFK('R_Arm_RigComponentsGrp')
RigBipedLimbComponent.RigHumanLimb.syncFKToIK('R_Arm_RigComponentsGrp')

RigBipedLimbComponent.RigHumanLimb.syncIKToFK('L_Leg_RigComponentsGrp')
RigBipedLimbComponent.RigHumanLimb.syncFKToIK('L_Leg_RigComponentsGrp')

RigBipedLimbComponent.RigHumanLimb.syncIKToFK('R_Leg_RigComponentsGrp')
RigBipedLimbComponent.RigHumanLimb.syncFKToIK('R_Leg_RigComponentsGrp')


cmds.select(cmds.ls(sl = 1, type = 'joint'))


RigObjectTypeHelper.listRigCharacters()
RigObjectTypeHelper.listRigCharacterGroups()



wBakeAnimationHelper.bakeRigCharacterAnimation(bakeSlaveJoints = True, bakeBlendshapes = True, 
                                              importReference = True, reloadReference = False)


c = JointHelper.getFirstChildGroup('null1')

RigObjectTypeHelper.linkRigObjects('Danli_RigGrp', 'ModelGrp', 'ModelGroup', 'ModelGroupOwner')

unknownPlugins = cmds.unknownPlugin(q = True, l = True)
for p in unknownPlugins:
    cmds.unknownPlugin(p, r = True)

res = cmds.namespace(query = True, isRootNamespace = ":")
res = cmds.namespaceInfo(currentNamespace = True)
cmds.namespace(set = ':DanLi01')
nt = cmds.nodeType('blendWeighted1')
res = cmds.ls(type = 'cMuscleSpline')
res = cmds.ls(type = 'cMuscleSplineDeformer')
res = cmds.ls(type = 'cMuscleObject')
res = cmds.ls(type = 'cMuscleSystem')        
cmds.select('cMuscleSplineNeck_LShape')
        


cmds.setKeyframe('animCurveUA22', float = 0.0, value = 0.0, itt = 'linear', ott = 'linear')
cmds.setKeyframe('animCurveUA22', float = 1.0, value = 8.0, itt = 'linear', ott = 'linear')

cmds.keyTangent('animCurveUA14', weightedTangents = False)

optionVar -iv "editorConnectionScanLimit" 10000000;











CreateRigUI.openMayaWindow()

ControlRigUI.openControlRigWindow()
res = cmds.listRelatives('pSphere1', p = 1)

RigHumanFacialComponent.resetFaceControls()
RigHumanFacialComponent.resetFaceProxyControls()
RigHumanFacialComponent.resetAllFaceControls()

BakeAnimationHelper.bakeRigCharacterAnimation(deleteRigAfterBaking = True, sampleJointBy = 4, sampleBlendShapeBy = 8, 
    cleanupUnskinnedSlaveLeafJoints = False)

res = cmds.ls(sl=1)
l = len(res)

RigHumanFacialComponent.removeFaceProxyControlInfluence()
DeformerHelper.updateSymmetricalBlendshape('baseClean')


jnts = ['joint1', 'joint2', 'joint3', 'joint4']
mesh = 'pSphere1'
cmds.skinCluster(jnts, mesh, toSelectedBones = True, skinMethod = 0, normalizeWeights = 1, obeyMaxInfluences = 1, maximumInfluences = 4)

jnts = JointHelper.getFacialBaseJointsFromSelectedRigCharacterGroup()
cmds.select(jnts)

jnts = JointHelper.getBodyDeformationJoints()
cmds.select(jnts)
res = len(jnts)

jnts = JointHelper.getSlaveFacialBaseJointsFromSelectedRigCharacterGroup()
cmds.select(jnts)

JointHelper.selectSkinJointsFromSelectedSkinObject()
res = cmds.ls(sl=1, type = 'joint')
cmds.select(res)
l = len(res)

res = DeformerHelper.createMirrorShapeAlongLocalAxis('bs1_R', 'base', newShape = 'bs1_L')

MathHelper.createLinearRemappingNode()


comp = RigObjectTypeHelper.getCharacterFacialComponentGroup('Female01_RigGrp')
res = RigObjectTypeHelper.getCharacterComponentRigPartsGroup(comp)
prefix = RigObjectTypeHelper.getCharacterComponentPrefix(comp)
buffer = RigHumanFacialComponent.getFACS_DataBuffer(comp)



def setControlRGBColor(control, color = (1.0, 1.0, 1.0)):
    
    rgb = ("R","G","B")
    cmds.setAttr(control + ".overrideEnabled",1)
    cmds.setAttr(control + ".overrideRGBColors",1)

    for channel, color in zip(rgb, color):    
        cmds.setAttr(control + ".overrideColor%s" %channel, color)

t = cmds.nodeType('BW_blendShape1_Lips_Push_Up')
res = cmds.ls(type = 'nurbsCurve')
cmds.select(res)
for s in res:
    setControlRGBColor(s, (0.4, 0.9, 0.9))

res = RigHumanFacialComponent.getFacialControlObject(RigEnum.eRigFacialControlType.RFCT_UpperLid, RigEnum.eRigSide.RS_Right, 0)

cmds.connectAttr('animCurveTU1.output', 'blendWeighted22.input[0]')
cmds.createNode('clamp')
cmds.setAttr('clamp15.maxR', 0.5)
cmds.setAttr('clamp15.maxG', 0.5)


RigHumanFacialComponent.createFacialSkinProxyJointsAndControlsFromSelection(4, False, 0.2)

RigHumanFacialComponent.createFacialProxyControlRivetConstraints('FacialBaseTri', 'Female01_RigGrp')




JointHelper.jointAddTag('L_EyelidUpperEnd', 'EngineBone')
JointHelper.jointAddTag('L_EyelidUpperEnd', 'test1')
JointHelper.jointAddTag('L_EyelidUpperEnd', 'test2')
JointHelper.jointRemoveTag('L_EyelidUpperEnd', 'EngineBone')
JointHelper.jointRemoveTag('L_EyelidUpperEnd', 'test1')
JointHelper.jointRemoveTag('L_EyelidUpperEnd', 'test2')
JointHelper.jointRemoveTag('L_EyelidUpperEnd', 'FacialBase')

res = JointHelper.jointHasTag('L_EyelidUpperEnd', 'test3')


    
res = findRelatedSkinCluster('FaceCage_V84')

res = RigObjectTypeHelper.findRelatedRigCharacterGroup('FaceCage_V84')

res = RigObjectTypeHelper.isRigControlGroup('FaceProxyControlGrp_parentConstraint1')

res = JointHelper.getSlaveFacialRootJoint('Female01_RigGrp')

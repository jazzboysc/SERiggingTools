MAYA_PLUG_IN_PATH = D:\Work\SERiggingTools\Plugins
MAYA_PLUG_IN_PATH += D:\Work\cvshapeinverter\plug-ins
PYTHONPATH = D:\Work


Maya：

import SERiggingTools.Base.SERigBase                as RigBase
import SERiggingTools.Base.SERigControl             as RigControl
import SERiggingTools.Base.SERigComponent           as RigComp
import SERiggingTools.Base.SERigEnum                as RigEnum
import SERiggingTools.Base.SERigNaming              as RigNaming
import SERiggingTools.Utils.SEJointHelper           as JointHelper
import SERiggingTools.Utils.SEStringHelper          as StringHelper
import SERiggingTools.Utils.SEMathHelper            as MathHelper
import SERiggingTools.Utils.SERigObjectTypeHelper   as RigObjectTypeHelper
import SERiggingTools.Utils.SEBakeAnimationHelper   as BakeAnimationHelper
import SERiggingTools.Utils.SEConstraintHelper      as ConstraintHelper
import SERiggingTools.Utils.SEDeformerHelper        as DeformerHelper
import SERiggingTools.Utils.SEFacsHelper            as FacsHelper
import SERiggingTools.Utils.HIKHelper               as HIKHelper
import SERiggingTools.Utils.MayaServer              as MayaServer
import SERiggingTools.Utils.SocketServerMaya        as SocketServerMaya
import SERiggingTools.Character.SECharacter         as RigCharacter
import SERiggingTools.Character.SECharacterDeform   as RigCharacterDeform 
import SERiggingTools.ThirdParty.bSkinSaver         as RigSkinSaver
import SERiggingTools.ThirdParty.cvshapeinverter    as RigShapeInverter
import SERiggingTools.Rig.SERigSpineComponent       as RigSpineComponent
import SERiggingTools.Rig.SERigBipedLimbComponent   as RigBipedLimbComponent
import SERiggingTools.Rig.SERigBipedNeckComponent   as RigBipedNeckComponent
import SERiggingTools.Rig.SERigHumanFacialComponent as RigHumanFacialComponent
import SERiggingTools.Rig.SERigCustomData           as RigCustomData
import SERiggingTools.UI.CreateRigUI                as CreateRigUI
import SERiggingTools.UI.ControlRigUI               as ControlRigUI
import SERiggingTools.UI.FACSManagerUI              as FACSManagerUI
import SERiggingTools.UI.FixJointModeUI             as FixJointModeUI
import SERiggingTools.UI.MayaToMobuUI               as MayaToMobuUI
import SERiggingTools.PoseLibrary.PoseBrowseUI      as PoseBrowseUI
import SERiggingTools.PoseLibrary.ScreenShot        as ScreenShot
import SERiggingTools.PoseLibrary.SavePose          as SavePose

from maya import cmds


reload(RigEnum)
reload(RigBase)
reload(RigControl)
reload(RigNaming)
reload(RigComp)
reload(JointHelper)
reload(StringHelper)
reload(MathHelper)
reload(ConstraintHelper)
reload(DeformerHelper)
reload(FacsHelper)
reload(HIKHelper)
reload(MayaServer)
reload(SocketServerMaya)
reload(RigObjectTypeHelper)
reload(BakeAnimationHelper)
reload(RigCharacter)
reload(RigCharacterDeform)
reload(RigSkinSaver)
reload(RigShapeInverter)
reload(RigSpineComponent)
reload(RigBipedLimbComponent)
reload(RigBipedNeckComponent)
reload(RigHumanFacialComponent)
reload(RigCustomData)
reload(CreateRigUI)
reload(ControlRigUI)
reload(PoseBrowseUI)
reload(FACSManagerUI)
reload(FixJointModeUI)
reload(MayaToMobuUI)
reload(ScreenShot)
reload(SavePose)



FixJointModeUI.openFixJointModeWindow()

CreateRigUI.openMayaWindow()

ControlRigUI.openControlRigWindow()

FACSManagerUI.openFACSManagerWindow()

MayaToMobuUI.openSendToMobuWindow()

MayaServer.start_Maya_server()





DeformerHelper.batchExportSkinClusterWeights()

DeformerHelper.batchImportSkinClusterWeights()

RigCustomData.exportRigCustomData()

RigCustomData.importRigCustomData()




RigShapeInverter.invert()






# 1 Import AUBase and AUs frome AUs.ma maya scene file.

# 2 Check AUs naming, possibly remove namespace or prefix.
# Batch removing AUs prefix, first select AUBase and all the AUs, then run this tool:
DeformerHelper.batchRemovePrefix()

# 3 Match the imported AUBase and AUs to our current character's face,
# first select AUBase and FacialBase, then run this tool:
DeformerHelper.matchSourceBlendshapesToTarget()

# 4 Connetc AUBase to our rig's facial control system. Select AUBase mesh and FacialBase mesh, then run this tool:
DeformerHelper.connectFACSDataBufferToAUBlendshape()

# 5 Add a blendshape target for our FacialBase mesh. Select AUBase and FacialBase mesh, then run maya command: Deform->BlendShape->Add->Specify node

# 6 Add a blendshape target for our FacialBaseTri mesh. Select FacialBase and FacialBaseTri, then run maya command: Deform-BlendShape->Create node

# 7 Create facial skin proxy joints and controls. First select our cage guide mesh(eg. FaceCage_V99) and our head LOD1 mesh, then run this tool:
RigHumanFacialComponent.createFacialSkinProxyJointsAndControlsFromSelection(4, False, 0.2)

# 8 Create drivers for facial skin proxy controls.
RigHumanFacialComponent.createFacialProxyControlRivetConstraints('FacialBaseTri', 'Kimono_Girl_RigGrp')

# 9 Remove some proxy controls and joints to fit the facial joint budget (75 joints per material)
 

# 10 Add slave neck 1, slave head, slave jaw offset joints to the skincluster.


DeformerHelper.updateSymmetricalBlendshape('baseClean')

res = DeformerHelper.createMirrorShapeAlongLocalAxis('AU_12R18L_Fix', 'baseClean', newShape = 'AU_12L18R_Fix01')


DeformerHelper.updateSymmetricalBlendshape('Head_LOD0_Clean')


CreateRigUI.openMayaWindow()

ControlRigUI.openControlRigWindow()

res = RigHumanFacialComponent.getFaceControls('Kimono_Girl_RigGrp')
res = RigHumanFacialComponent.getFaceProxyControls('Kimono_Girl_RigGrp')

RigHumanFacialComponent.resetFaceControls()
RigHumanFacialComponent.resetFaceProxyControls()
RigHumanFacialComponent.resetAllFaceControls()



RigHumanFacialComponent.appendFACS_Au_MultiFix('C_Face_FACS_DataBufferGrp', RigNaming.sAU_12_L_Attr, RigNaming.sAU_18_R_Attr)
RigHumanFacialComponent.appendFACS_Au_MultiFix('C_Face_FACS_DataBufferGrp', RigNaming.sAU_12_R_Attr, RigNaming.sAU_18_L_Attr)
RigHumanFacialComponent.appendFACS_Au_MultiFix('C_Face_FACS_DataBufferGrp', RigNaming.sAU_10_OR_Attr, RigNaming.sAU_10_OL_Attr)






BakeAnimationHelper.bakeRigCharacterAnimation(deleteRigAfterBaking = True, sampleJointBy = 4, sampleBlendShapeBy = 8, 
    cleanupUnskinnedSlaveLeafJoints = False)

res = cmds.ls(sl=1)
l = len(res)



res = cmds.listConnections('FK_C_Neck_1_Ctrl')


jnts = JointHelper.getFacialBaseJointsFromSelectedRigCharacterGroup()
cmds.select(jnts)

jnts = JointHelper.getBodyDeformationJoints()
cmds.select(jnts)
res = len(jnts)

jnts = JointHelper.getSlaveFacialBaseJointsFromSelectedRigCharacterGroup()
cmds.select(jnts)

JointHelper.selectSkinJointsFromSelectedSkinObject()
res = cmds.ls(sl=1, type = 'joint')
cmds.select(res)
l = len(res)



MathHelper.createLinearRemappingNode()


comp = RigObjectTypeHelper.getCharacterFacialComponentGroup('Female01_RigGrp')
res = RigObjectTypeHelper.getCharacterComponentRigPartsGroup(comp)
prefix = RigObjectTypeHelper.getCharacterComponentPrefix(comp)
buffer = RigHumanFacialComponent.getFACS_DataBuffer(comp)

res = RigHumanFacialComponent.getFacialControlObject(RigEnum.eRigFacialControlType.RFCT_UpperLid, RigEnum.eRigSide.RS_Right, 0)

    
res = findRelatedSkinCluster('FaceCage_V84')

res = RigObjectTypeHelper.findRelatedRigCharacterGroup('FaceCage_V84')

res = RigObjectTypeHelper.isRigControlGroup('FaceProxyControlGrp_parentConstraint1')

res = JointHelper.getSlaveFacialRootJoint('Female01_RigGrp')








Motion Builder：

import sys
sys.path.append('D:\Work')

import SERiggingTools.Utils.SocketServerMobu as SocketServerMobu
import SERiggingTools.MobuToMaya.MobuToMayaTools.MobuServer2020 as MobuServer2020
import SERiggingTools.MobuToMaya.MobuToMayaTools.SendToMayaUI as SendToMayaUI
import SERiggingTools.MobuToMaya.MobuToMayaMenu.MobuToMayaMenu as MobuToMayaMenu

reload(SocketServerMobu)
reload(MobuServer2020)
reload(SendToMayaUI)

MobuToMayaMenu.LoadMenu()








